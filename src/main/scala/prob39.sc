package problem

object ex39 {
  println("가장 많은 직각 삼각형이 만들어지는 둘레(<= 1000)의 길이는?")//> 가장 많은 직각 삼각형이 만들어지는 둘레(<= 1000)의 길이�
                                                  //| �?
                                                  
  val r = for(a <- (1 to 1000); b <- (1 to 1000) ; c = Math.sqrt(a*a + b * b).toInt; if(c*c == a*a + b*b);if(a + b + c < 1000)) yield  a + b + c
                                                  //> r  : scala.collection.immutable.IndexedSeq[Int] = Vector(12, 12, 30, 24, 56,
                                                  //|  24, 40, 36, 90, 60, 132, 30, 36, 48, 84, 182, 112, 40, 60, 90, 240, 48, 80,
                                                  //|  144, 306, 72, 180, 380, 60, 70, 120, 220, 70, 84, 168, 462, 264, 552, 56, 6
                                                  //| 0, 72, 96, 120, 168, 312, 150, 650, 364, 108, 270, 756, 84, 126, 224, 420, 8
                                                  //| 70, 80, 120, 180, 480, 992, 96, 160, 288, 544, 132, 154, 396, 612, 84, 210, 
                                                  //| 280, 90, 108, 144, 198, 252, 360, 684, 760, 156, 208, 546, 90, 120, 140, 200
                                                  //| , 240, 440, 840, 140, 168, 336, 924, 132, 286, 528, 120, 126, 180, 270, 450,
                                                  //|  720, 112, 120, 144, 176, 192, 240, 336, 432, 624, 392, 300, 204, 340, 918, 
                                                  //| 156, 390, 728, 216, 540, 176, 330, 660, 154, 168, 252, 280, 448, 840, 228, 4
                                                  //| 18, 132, 150, 160, 180, 210, 240, 260, 360, 420, 510, 660, 960, 144, 210, 25
                                                  //| 2, 504, 630, 192, 320, 576, 234, 390, 910, 264, 308, 792, 204, 646, 276, 598
                                                  //| , 168, 420, 560, 168, 180, 216, 234, 288, 360, 396, 504, 720, 936, 200, 300,
                                                  //|  450, 700, 228, 798, 198
                                                  //| Output exceeds cutoff limit.
	val s = r.groupBy(w => w).mapValues(_.length)
                                                  //> s  : scala.collection.immutable.Map[Int,Int] = Map(760 -> 4, 468 -> 4, 234 -
                                                  //| > 2, 352 -> 2, 408 -> 4, 276 -> 2, 308 -> 2, 120 -> 6, 440 -> 4, 384 -> 2, 5
                                                  //| 6 -> 2, 340 -> 2, 930 -> 2, 782 -> 2, 24 -> 2, 288 -> 4, 320 -> 2, 570 -> 4,
                                                  //|  372 -> 2, 504 -> 8, 702 -> 2, 870 -> 4, 770 -> 4, 416 -> 2, 228 -> 2, 448 -
                                                  //| > 2, 216 -> 2, 924 -> 10, 492 -> 2, 756 -> 8, 646 -> 2, 348 -> 2, 84 -> 4, 9
                                                  //| 66 -> 2, 480 -> 8, 280 -> 6, 132 -> 4, 396 -> 6, 660 -> 10, 988 -> 2, 312 ->
                                                  //|  4, 920 -> 4, 60 -> 4, 380 -> 2, 270 -> 4, 546 -> 4, 810 -> 4, 220 -> 2, 714
                                                  //|  -> 2, 798 -> 2, 910 -> 4, 952 -> 4, 260 -> 2, 598 -> 2, 160 -> 2, 392 -> 2,
                                                  //|  70 -> 2, 192 -> 2, 630 -> 8, 252 -> 6, 852 -> 2, 456 -> 4, 324 -> 2, 224 ->
                                                  //|  2, 874 -> 2, 650 -> 2, 948 -> 2, 156 -> 2, 980 -> 2, 420 -> 10, 884 -> 2, 4
                                                  //| 76 -> 2, 96 -> 2, 984 -> 2, 792 -> 6, 360 -> 8, 888 -> 2, 750 -> 2, 264 -> 4
                                                  //| , 180 -> 6, 444 -> 2, 176 -> 2, 732 -> 2, 286 -> 2, 204 -> 2, 12 -> 2, 936 -
                                                  //| > 6, 572 -> 2, 144 -> 4,
                                                  //| Output exceeds cutoff limit.
	val s1 = r.groupBy(w => w).maxBy(_._2.size)._2
                                                  //> s1  : scala.collection.immutable.IndexedSeq[Int] = Vector(840, 840, 840, 840
                                                  //| , 840, 840, 840, 840, 840, 840, 840, 840, 840, 840, 840, 840)
	val s2 = r.groupBy(w => w).maxBy(_._2.size)._2.groupBy(w => w).mapValues(_.size)
                                                  //> s2  : scala.collection.immutable.Map[Int,Int] = Map(840 -> 16)
	
}